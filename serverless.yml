service:
  name: user

plugins:
  - serverless-prune-plugin
  - serverless-iam-roles-per-function
  - serverless-webpack
  - serverless-domain-manager

custom:
  prune:
    automatic: true
    number: 2
  serverless-iam-roles-per-function:
    defaultInherit: true
  userTableNameMap:
    default: dev-user
    production: user
  userTableName: ${self:custom.userTableNameMap.${self:provider.stage}, self:custom.userTableNameMap.default}
  userTableArn: ${ssm:/nevvi/dynamodb/${self:custom.userTableName}/arn}
  domainNameMap:
    default: api.development.nevvi.net
    production: api.nevvi.net
  basePathMap:
    production: user
    development: user
    default: ${self:provider.stage}-user
  customDomain:
    domainName: ${self:custom.domainNameMap.${self:provider.stage}, self:custom.domainNameMap.default}
    basePath: ${self:custom.basePathMap.${self:provider.stage}, self:custom.basePathMap.default}

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'test'}
  region: ${opt:region, 'us-east-1'}
  apiName: user-${self:provider.stage}
  stackName: user-${self:provider.stage}
  deploymentBucket:
    name: nevvi-serverless-deployment-bucket
  deploymentPrefix: ${self:provider.stage}
  environment:
    USER_TABLE: ${self:custom.userTableName}

functions:
  getUser:
    handler: src/functions/UserHandler.getUser
    events:
      - http:
          path: /v1/{userId}
          method: get
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
        Resource: ${self:custom.userTableArn}